{"version":3,"sources":["delegate.js"],"names":["closest","require","_delegate","element","selector","type","callback","useCapture","listenerFn","listener","apply","arguments","addEventListener","destroy","removeEventListener","delegate","elements","bind","document","querySelectorAll","Array","prototype","map","call","e","delegateTarget","target","module","exports"],"mappings":";;AAAA,QAAIA,UAAUC,QAAQ,WAAR,CAAd;;AAEA;;;;;;;;;;AAUA,aAASC,SAAT,CAAmBC,OAAnB,EAA4BC,QAA5B,EAAsCC,IAAtC,EAA4CC,QAA5C,EAAsDC,UAAtD,EAAkE;AAC9D,YAAIC,aAAaC,SAASC,KAAT,CAAe,IAAf,EAAqBC,SAArB,CAAjB;;AAEAR,gBAAQS,gBAAR,CAAyBP,IAAzB,EAA+BG,UAA/B,EAA2CD,UAA3C;;AAEA,eAAO;AACHM,qBAAS,YAAW;AAChBV,wBAAQW,mBAAR,CAA4BT,IAA5B,EAAkCG,UAAlC,EAA8CD,UAA9C;AACH;AAHE,SAAP;AAKH;;AAED;;;;;;;;;;AAUA,aAASQ,QAAT,CAAkBC,QAAlB,EAA4BZ,QAA5B,EAAsCC,IAAtC,EAA4CC,QAA5C,EAAsDC,UAAtD,EAAkE;AAC9D;AACA,YAAI,OAAOS,SAASJ,gBAAhB,KAAqC,UAAzC,EAAqD;AACjD,mBAAOV,UAAUQ,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,CAAP;AACH;;AAED;AACA,YAAI,OAAON,IAAP,KAAgB,UAApB,EAAgC;AAC5B;AACA;AACA,mBAAOH,UAAUe,IAAV,CAAe,IAAf,EAAqBC,QAArB,EAA+BR,KAA/B,CAAqC,IAArC,EAA2CC,SAA3C,CAAP;AACH;;AAED;AACA,YAAI,OAAOK,QAAP,KAAoB,QAAxB,EAAkC;AAC9BA,uBAAWE,SAASC,gBAAT,CAA0BH,QAA1B,CAAX;AACH;;AAED;AACA,eAAOI,MAAMC,SAAN,CAAgBC,GAAhB,CAAoBC,IAApB,CAAyBP,QAAzB,EAAmC,UAAUb,OAAV,EAAmB;AACzD,mBAAOD,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,UAA7C,CAAP;AACH,SAFM,CAAP;AAGH;;AAED;;;;;;;;;AASA,aAASE,QAAT,CAAkBN,OAAlB,EAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,QAA3C,EAAqD;AACjD,eAAO,UAASkB,CAAT,EAAY;AACfA,cAAEC,cAAF,GAAmBzB,QAAQwB,EAAEE,MAAV,EAAkBtB,QAAlB,CAAnB;;AAEA,gBAAIoB,EAAEC,cAAN,EAAsB;AAClBnB,yBAASiB,IAAT,CAAcpB,OAAd,EAAuBqB,CAAvB;AACH;AACJ,SAND;AAOH;;AAEDG,WAAOC,OAAP,GAAiBb,QAAjB","file":"delegate.js","sourcesContent":["var closest = require('./closest');\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n"]}