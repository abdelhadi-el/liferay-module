{"version":3,"sources":["clipboard-action.js"],"names":["select","ClipboardAction","constructor","options","resolveOptions","initSelection","action","container","emitter","target","text","trigger","selectedText","selectFake","selectTarget","isRTL","document","documentElement","getAttribute","removeFake","fakeHandlerCallback","fakeHandler","addEventListener","fakeElem","createElement","style","fontSize","border","padding","margin","position","yPosition","window","pageYOffset","scrollTop","top","setAttribute","value","appendChild","copyText","removeEventListener","removeChild","succeeded","execCommand","err","handleResult","emit","clearSelection","bind","focus","getSelection","removeAllRanges","_action","Error","undefined","nodeType","hasAttribute","_target","destroy","module","exports"],"mappings":"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","file":"clipboard-action.js","sourcesContent":["import select from 'select';\n\n/**\n * Inner class which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n */\nclass ClipboardAction {\n    /**\n     * @param {Object} options\n     */\n    constructor(options) {\n        this.resolveOptions(options);\n        this.initSelection();\n    }\n\n    /**\n     * Defines base properties passed from constructor.\n     * @param {Object} options\n     */\n    resolveOptions(options = {}) {\n        this.action    = options.action;\n        this.container = options.container;\n        this.emitter   = options.emitter;\n        this.target    = options.target;\n        this.text      = options.text;\n        this.trigger   = options.trigger;\n\n        this.selectedText = '';\n    }\n\n    /**\n     * Decides which selection strategy is going to be applied based\n     * on the existence of `text` and `target` properties.\n     */\n    initSelection() {\n        if (this.text) {\n            this.selectFake();\n        }\n        else if (this.target) {\n            this.selectTarget();\n        }\n    }\n\n    /**\n     * Creates a fake textarea element, sets its value from `text` property,\n     * and makes a selection on it.\n     */\n    selectFake() {\n        const isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n\n        this.removeFake();\n\n        this.fakeHandlerCallback = () => this.removeFake();\n        this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n\n        this.fakeElem = document.createElement('textarea');\n        // Prevent zooming on iOS\n        this.fakeElem.style.fontSize = '12pt';\n        // Reset box model\n        this.fakeElem.style.border = '0';\n        this.fakeElem.style.padding = '0';\n        this.fakeElem.style.margin = '0';\n        // Move element out of screen horizontally\n        this.fakeElem.style.position = 'absolute';\n        this.fakeElem.style[ isRTL ? 'right' : 'left' ] = '-9999px';\n        // Move element to the same position vertically\n        let yPosition = window.pageYOffset || document.documentElement.scrollTop;\n        this.fakeElem.style.top = `${yPosition}px`;\n\n        this.fakeElem.setAttribute('readonly', '');\n        this.fakeElem.value = this.text;\n\n        this.container.appendChild(this.fakeElem);\n\n        this.selectedText = select(this.fakeElem);\n        this.copyText();\n    }\n\n    /**\n     * Only removes the fake element after another click event, that way\n     * a user can hit `Ctrl+C` to copy because selection still exists.\n     */\n    removeFake() {\n        if (this.fakeHandler) {\n            this.container.removeEventListener('click', this.fakeHandlerCallback);\n            this.fakeHandler = null;\n            this.fakeHandlerCallback = null;\n        }\n\n        if (this.fakeElem) {\n            this.container.removeChild(this.fakeElem);\n            this.fakeElem = null;\n        }\n    }\n\n    /**\n     * Selects the content from element passed on `target` property.\n     */\n    selectTarget() {\n        this.selectedText = select(this.target);\n        this.copyText();\n    }\n\n    /**\n     * Executes the copy operation based on the current selection.\n     */\n    copyText() {\n        let succeeded;\n\n        try {\n            succeeded = document.execCommand(this.action);\n        }\n        catch (err) {\n            succeeded = false;\n        }\n\n        this.handleResult(succeeded);\n    }\n\n    /**\n     * Fires an event based on the copy operation result.\n     * @param {Boolean} succeeded\n     */\n    handleResult(succeeded) {\n        this.emitter.emit(succeeded ? 'success' : 'error', {\n            action: this.action,\n            text: this.selectedText,\n            trigger: this.trigger,\n            clearSelection: this.clearSelection.bind(this)\n        });\n    }\n\n    /**\n     * Moves focus away from `target` and back to the trigger, removes current selection.\n     */\n    clearSelection() {\n        if (this.trigger) {\n            this.trigger.focus();\n        }\n\n        window.getSelection().removeAllRanges();\n    }\n\n    /**\n     * Sets the `action` to be performed which can be either 'copy' or 'cut'.\n     * @param {String} action\n     */\n    set action(action = 'copy') {\n        this._action = action;\n\n        if (this._action !== 'copy' && this._action !== 'cut') {\n            throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n        }\n    }\n\n    /**\n     * Gets the `action` property.\n     * @return {String}\n     */\n    get action() {\n        return this._action;\n    }\n\n    /**\n     * Sets the `target` property using an element\n     * that will be have its content copied.\n     * @param {Element} target\n     */\n    set target(target) {\n        if (target !== undefined) {\n            if (target && typeof target === 'object' && target.nodeType === 1) {\n                if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                    throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                }\n\n                if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                    throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                }\n\n                this._target = target;\n            }\n            else {\n                throw new Error('Invalid \"target\" value, use a valid Element');\n            }\n        }\n    }\n\n    /**\n     * Gets the `target` property.\n     * @return {String|HTMLElement}\n     */\n    get target() {\n        return this._target;\n    }\n\n    /**\n     * Destroy lifecycle.\n     */\n    destroy() {\n        this.removeFake();\n    }\n}\n\nmodule.exports = ClipboardAction;\n"]}