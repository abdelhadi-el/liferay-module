{"version":3,"sources":["index.js"],"names":["E","prototype","on","name","callback","ctx","e","push","fn","once","self","listener","off","apply","arguments","_","emit","data","slice","call","evtArr","i","len","length","evts","liveEvents","module","exports","TinyEmitter"],"mappings":";;AAAA,WAASA,CAAT,GAAc;AACZ;AACA;AACD;;AAEDA,IAAEC,SAAF,GAAc;AACZC,QAAI,UAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,GAA1B,EAA+B;AACjC,UAAIC,IAAI,KAAKA,CAAL,KAAW,KAAKA,CAAL,GAAS,EAApB,CAAR;;AAEA,OAACA,EAAEH,IAAF,MAAYG,EAAEH,IAAF,IAAU,EAAtB,CAAD,EAA4BI,IAA5B,CAAiC;AAC/BC,YAAIJ,QAD2B;AAE/BC,aAAKA;AAF0B,OAAjC;;AAKA,aAAO,IAAP;AACD,KAVW;;AAYZI,UAAM,UAAUN,IAAV,EAAgBC,QAAhB,EAA0BC,GAA1B,EAA+B;AACnC,UAAIK,OAAO,IAAX;AACA,eAASC,QAAT,GAAqB;AACnBD,aAAKE,GAAL,CAAST,IAAT,EAAeQ,QAAf;AACAP,iBAASS,KAAT,CAAeR,GAAf,EAAoBS,SAApB;AACD;;AAEDH,eAASI,CAAT,GAAaX,QAAb;AACA,aAAO,KAAKF,EAAL,CAAQC,IAAR,EAAcQ,QAAd,EAAwBN,GAAxB,CAAP;AACD,KArBW;;AAuBZW,UAAM,UAAUb,IAAV,EAAgB;AACpB,UAAIc,OAAO,GAAGC,KAAH,CAASC,IAAT,CAAcL,SAAd,EAAyB,CAAzB,CAAX;AACA,UAAIM,SAAS,CAAC,CAAC,KAAKd,CAAL,KAAW,KAAKA,CAAL,GAAS,EAApB,CAAD,EAA0BH,IAA1B,KAAmC,EAApC,EAAwCe,KAAxC,EAAb;AACA,UAAIG,IAAI,CAAR;AACA,UAAIC,MAAMF,OAAOG,MAAjB;;AAEA,WAAKF,CAAL,EAAQA,IAAIC,GAAZ,EAAiBD,GAAjB,EAAsB;AACpBD,eAAOC,CAAP,EAAUb,EAAV,CAAaK,KAAb,CAAmBO,OAAOC,CAAP,EAAUhB,GAA7B,EAAkCY,IAAlC;AACD;;AAED,aAAO,IAAP;AACD,KAlCW;;AAoCZL,SAAK,UAAUT,IAAV,EAAgBC,QAAhB,EAA0B;AAC7B,UAAIE,IAAI,KAAKA,CAAL,KAAW,KAAKA,CAAL,GAAS,EAApB,CAAR;AACA,UAAIkB,OAAOlB,EAAEH,IAAF,CAAX;AACA,UAAIsB,aAAa,EAAjB;;AAEA,UAAID,QAAQpB,QAAZ,EAAsB;AACpB,aAAK,IAAIiB,IAAI,CAAR,EAAWC,MAAME,KAAKD,MAA3B,EAAmCF,IAAIC,GAAvC,EAA4CD,GAA5C,EAAiD;AAC/C,cAAIG,KAAKH,CAAL,EAAQb,EAAR,KAAeJ,QAAf,IAA2BoB,KAAKH,CAAL,EAAQb,EAAR,CAAWO,CAAX,KAAiBX,QAAhD,EACEqB,WAAWlB,IAAX,CAAgBiB,KAAKH,CAAL,CAAhB;AACH;AACF;;AAED;AACA;AACA;;AAECI,iBAAWF,MAAZ,GACIjB,EAAEH,IAAF,IAAUsB,UADd,GAEI,OAAOnB,EAAEH,IAAF,CAFX;;AAIA,aAAO,IAAP;AACD;AAzDW,GAAd;;AA4DAuB,SAAOC,OAAP,GAAiB3B,CAAjB;AACA0B,SAAOC,OAAP,CAAeC,WAAf,GAA6B5B,CAA7B","file":"index.js","sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n"]}