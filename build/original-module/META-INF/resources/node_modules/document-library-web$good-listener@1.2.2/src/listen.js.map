{"version":3,"sources":["listen.js"],"names":["is","require","delegate","listen","target","type","callback","Error","string","TypeError","fn","node","listenNode","nodeList","listenNodeList","listenSelector","addEventListener","destroy","removeEventListener","Array","prototype","forEach","call","selector","document","body","module","exports"],"mappings":";;AAAA,QAAIA,KAAKC,QAAQ,MAAR,CAAT;AACA,QAAIC,WAAWD,QAAQ,+BAAR,CAAf;;AAEA;;;;;;;;;AASA,aAASE,MAAT,CAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwC;AACpC,YAAI,CAACF,MAAD,IAAW,CAACC,IAAZ,IAAoB,CAACC,QAAzB,EAAmC;AAC/B,kBAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACH;;AAED,YAAI,CAACP,GAAGQ,MAAH,CAAUH,IAAV,CAAL,EAAsB;AAClB,kBAAM,IAAII,SAAJ,CAAc,kCAAd,CAAN;AACH;;AAED,YAAI,CAACT,GAAGU,EAAH,CAAMJ,QAAN,CAAL,EAAsB;AAClB,kBAAM,IAAIG,SAAJ,CAAc,mCAAd,CAAN;AACH;;AAED,YAAIT,GAAGW,IAAH,CAAQP,MAAR,CAAJ,EAAqB;AACjB,mBAAOQ,WAAWR,MAAX,EAAmBC,IAAnB,EAAyBC,QAAzB,CAAP;AACH,SAFD,MAGK,IAAIN,GAAGa,QAAH,CAAYT,MAAZ,CAAJ,EAAyB;AAC1B,mBAAOU,eAAeV,MAAf,EAAuBC,IAAvB,EAA6BC,QAA7B,CAAP;AACH,SAFI,MAGA,IAAIN,GAAGQ,MAAH,CAAUJ,MAAV,CAAJ,EAAuB;AACxB,mBAAOW,eAAeX,MAAf,EAAuBC,IAAvB,EAA6BC,QAA7B,CAAP;AACH,SAFI,MAGA;AACD,kBAAM,IAAIG,SAAJ,CAAc,2EAAd,CAAN;AACH;AACJ;;AAED;;;;;;;;;AASA,aAASG,UAAT,CAAoBD,IAApB,EAA0BN,IAA1B,EAAgCC,QAAhC,EAA0C;AACtCK,aAAKK,gBAAL,CAAsBX,IAAtB,EAA4BC,QAA5B;;AAEA,eAAO;AACHW,qBAAS,YAAW;AAChBN,qBAAKO,mBAAL,CAAyBb,IAAzB,EAA+BC,QAA/B;AACH;AAHE,SAAP;AAKH;;AAED;;;;;;;;;AASA,aAASQ,cAAT,CAAwBD,QAAxB,EAAkCR,IAAlC,EAAwCC,QAAxC,EAAkD;AAC9Ca,cAAMC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BT,QAA7B,EAAuC,UAASF,IAAT,EAAe;AAClDA,iBAAKK,gBAAL,CAAsBX,IAAtB,EAA4BC,QAA5B;AACH,SAFD;;AAIA,eAAO;AACHW,qBAAS,YAAW;AAChBE,sBAAMC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BT,QAA7B,EAAuC,UAASF,IAAT,EAAe;AAClDA,yBAAKO,mBAAL,CAAyBb,IAAzB,EAA+BC,QAA/B;AACH,iBAFD;AAGH;AALE,SAAP;AAOH;;AAED;;;;;;;;;AASA,aAASS,cAAT,CAAwBQ,QAAxB,EAAkClB,IAAlC,EAAwCC,QAAxC,EAAkD;AAC9C,eAAOJ,SAASsB,SAASC,IAAlB,EAAwBF,QAAxB,EAAkClB,IAAlC,EAAwCC,QAAxC,CAAP;AACH;;AAEDoB,WAAOC,OAAP,GAAiBxB,MAAjB","file":"listen.js","sourcesContent":["var is = require('./is');\nvar delegate = require('delegate');\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n"]}